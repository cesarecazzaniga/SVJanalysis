{

"Comment": "Define the binning of the different variable either by giving the entire variable name - noregex dict - or by writing a regex for it - regex dict. Regexes can be used to efficiently define the binning of several variables at once. If a variable is in the noregex dict, the regexes will not be examined. Binning is defined by 3 numbers: number of bins, min, max.",

"binning": {
    "noregex": {
	"j1j2_mass"                                       :  [500  ,  0   , 5000 ],
	"J1J2_mass"                                       :  [500  ,  0   , 5000 ],
	"J1J2corr_mass"                                   :  [500  ,  0   , 5000 ],
	"j1j2_pt"                                         :  [500  ,  0   , 5000 ],
	"J1J2_pt"                                         :  [500  ,  0   , 5000 ]
	},

    "regex": {
	"ak[48]Jet_n"                                        :  [20   ,  0   , 20   ],
	"^(?!.*MET|.*_r_).*_pt(_ge[1-9]+ak[48])?$"           :  [250  ,  0   , 2000 ],
	"_eta(_ge[1-9]+ak[48])?$"                            :  [100  , -6   , 6    ],
	"_phi(_ge[1-9]+ak[48])?$"                            :  [100  , -4   , 4    ],
	"_msoftdrop(_ge[1-9]+ak[48])?$"                      :  [250   ,  0   , 250  ],
	"^(?!.*Jet.*_.*Jet).*_mass(_ge[1-9]+ak[48])?$"       :  [250   ,  0   , 250  ],
	"^(.*Jet.*_.*Jet).*_mass(_ge[1-9]+ak[48])?$"         :  [250   ,  0   , 5000 ],
	"_tau1(_ge[1-9]+ak[48])?$"                           :  [250   ,  0   , 0.8  ],
	"_tau2(_ge[1-9]+ak[48])?$"                           :  [250   ,  0   , 0.65 ],
	"_tau3(_ge[1-9]+ak[48])?$"                           :  [250   ,  0   , 0.35 ],
	"_tau21(_ge[1-9]+ak[48])?$"                          :  [250   ,  0   , 1.3  ],
	"_tau32(_ge[1-9]+ak[48])?$"                          :  [250   ,  0   , 1.3  ],

        "deltaR_ak[48]Jet[1-9]_ak[48]Jet[1-9](?!PFCands)"     :  [250  ,  0   , 10   ],
	"deltaPhi_ak[48]Jet[1-9]_ak[48]Jet[1-9]"              :  [250  ,  0   , 4    ],
	"deltaEta_ak[48]Jet[1-9]_ak[48]Jet[1-9]"              :  [250  ,  0   , 6    ],
        "deltaPhi_ak[48]Jet[1-9]_MET_ge[1-9]ak[48]"           :  [250  ,  0   , 4    ],
        "deltaPhiMin_ak[48]Jet_MET_ge[2-9]ak[48]"             :  [250  ,  0   , 4    ],

	"deltaR_ak8Jet[1-9]_ak8Jet[1-9]PFCands_ge[1-9]ak8"  :  [250  ,  0   , 1    ],
	"deltaR_ak4Jet[1-9]_ak4Jet[1-9]PFCands_ge[1-9]ak4"  :  [250  ,  0   , 1    ],
        "sum_ak[48]Jet[1-9]PFCandsPt_deltaR[0-9.]+To[0-9.]+_r_ak[48]Jet[1-9]Pt_ge[0-9]+ak[48]": [200  ,  0   , 1    ],

	"(Gen|Puppi|Raw)?MET_pt(_ge[1-9]+ak[48])?$"      :  [250  ,  0   , 2000 ],
	"^HTak[48]"                                      :  [500  ,  0   , 5000 ],
	"^STak[48]"                                      :  [500  ,  0   , 5000 ],
	"^MTak[48]"                                      :  [500  ,  0   , 15000],
	"^RTak[48]"                                      :  [500  ,  0   , 0.5  ],
	"METrHTak[48]"                                   :  [250  ,  0   , 2    ],
	"METrSTak[48]"                                   :  [250  ,  0   , 1    ]
    }
}
}
